name: Compile and Update LaTeX Resume

# Defines when the workflow should run
on:
  push:
    paths:
      - 'resume/**' # Only triggers for changes in the 'resume' directory
  schedule:
    - cron: '0 19 * * 1' # Runs every Monday at 19:00 UTC
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  compile-and-deploy:
    runs-on: ubuntu-latest # Specifies the runner environment to be the latest version of Ubuntu

    steps:
    # Checkout the repository to access its contents
    - name: Set up Git repository
      uses: actions/checkout@v4

    # Dynamically sets the branch name to include the current date and time for uniqueness
    - name: Set Dynamic Branch Name with Timestamp
      run: echo "BRANCH_NAME=update-resume-$(date +%Y-%m-%d_time_%H_%M_%S)" >> $GITHUB_ENV

    # Installs the necessary LaTeX packages and the Poppler utility for converting PDFs to images
    - name: Install LaTeX and Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y aptitude
        sudo aptitude update
        sudo aptitude install -y texlive-latex-recommended texlive-fonts-recommended texlive-latex-extra poppler-utils

    # Compiles the LaTeX document into a PDF and converts the PDF to a PNG image
    - name: Compile LaTeX document and Convert to PNG
      run: |
        cd resume
        pdflatex jaman-uddin.tex # Compile LaTeX to PDF
        pdftoppm jaman-uddin.pdf jaman-uddin -png -r 300 # Convert PDF to PNG
        mv jaman-uddin-1.png jaman-uddin.png

    # Configures Git with a user name and email to allow for commits
    - name: Configure Git
      run: |
        git config --local user.email "zamaan.md19@gmail.com"
        git config --local user.name "RootProgrammer"

    # Checks if the branch exists, checks it out or creates it, then commits and pushes changes if there are any
    - name: Update or Create Branch and Push Changes
      run: |
        git fetch origin # Ensures we have the latest branch information
        if git checkout ${{ env.BRANCH_NAME }}; then
          echo "Branch already exists. Checked out and pulling latest changes."
          git pull origin ${{ env.BRANCH_NAME }}
        else
          echo "Creating a new branch."
          git checkout -b ${{ env.BRANCH_NAME }}
        fi
        git add resume/jaman-uddin.pdf resume/jaman-uddin.png
        if git diff --staged --quiet; then
          echo "No changes detected, not creating a commit."
        else
          git commit -m "Automatically update compiled resume PDF and PNG"
          git push --force-with-lease origin ${{ env.BRANCH_NAME }}
        fi
      id: changes # This ID is used to reference output variables in subsequent steps
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Creates a pull request with the changes if any changes were detected and committed
    - name: Create Pull Request
      if: env.CHANGES_DETECTED == 'true' # Only runs if changes were detected
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Update compiled resume PDF and PNG
        title: "Automatically update compiled resume PDF and PNG"
        body: "This is an auto-generated PR to update the compiled PDF and PNG files."
        branch: ${{ env.BRANCH_NAME }}
        base: main # Specifies the base branch for the PR to be merged into
